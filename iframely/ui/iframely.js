/******/ (function(modules) { // webpackBootstrap
        /******/ 	// The module cache
        /******/ 	var installedModules = {};
        /******/
        /******/ 	// The require function
        /******/ 	function __webpack_require__(moduleId) {
                /******/
                /******/ 		// Check if module is in cache
                /******/ 		if(installedModules[moduleId]) {
                        /******/ 			return installedModules[moduleId].exports;
                        /******/ 		}
                /******/ 		// Create a new module (and put it into the cache)
                /******/ 		var module = installedModules[moduleId] = {
                        /******/ 			i: moduleId,
                        /******/ 			l: false,
                        /******/ 			exports: {}
                        /******/ 		};
                /******/
                /******/ 		// Execute the module function
                /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
                /******/
                /******/ 		// Flag the module as loaded
                /******/ 		module.l = true;
                /******/
                /******/ 		// Return the exports of the module
                /******/ 		return module.exports;
                /******/ 	}
        /******/
        /******/
        /******/ 	// expose the modules object (__webpack_modules__)
        /******/ 	__webpack_require__.m = modules;
        /******/
        /******/ 	// expose the module cache
        /******/ 	__webpack_require__.c = installedModules;
        /******/
        /******/ 	// define getter function for harmony exports
        /******/ 	__webpack_require__.d = function(exports, name, getter) {
                /******/ 		if(!__webpack_require__.o(exports, name)) {
                        /******/ 			Object.defineProperty(exports, name, {
                                /******/ 				configurable: false,
                                /******/ 				enumerable: true,
                                /******/ 				get: getter
                                /******/ 			});
                        /******/ 		}
                /******/ 	};
        /******/
        /******/ 	// getDefaultExport function for compatibility with non-harmony modules
        /******/ 	__webpack_require__.n = function(module) {
                /******/ 		var getter = module && module.__esModule ?
                    /******/ 			function getDefault() { return module['default']; } :
                    /******/ 			function getModuleExports() { return module; };
                /******/ 		__webpack_require__.d(getter, 'a', getter);
                /******/ 		return getter;
                /******/ 	};
        /******/
        /******/ 	// Object.prototype.hasOwnProperty.call
        /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
        /******/
        /******/ 	// __webpack_public_path__
        /******/ 	__webpack_require__.p = "";
        /******/
        /******/ 	// Load entry module and return exports
        /******/ 	return __webpack_require__(__webpack_require__.s = 0);
        /******/ })
/************************************************************************/
/******/ ([
        /* 0 */
        /***/ (function(module, exports) {

                eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Iramely oembed scripts\n */\nvar __ = wp.i18n.__;\nvar createHigherOrderComponent = wp.compose.createHigherOrderComponent;\nvar Fragment = wp.element.Fragment;\nvar InspectorControls = wp.blockEditor.InspectorControls;\n\nvar iEvent = new RegExp(\"setIframelyEmbedOptions\");\nvar PanelBody = wp.components.PanelBody;\n\n\nfunction findIframeByContentWindow(iframes, contentWindow) {\n    var foundIframe = void 0;\n    for (var i = 0; i < iframes.length && !foundIframe; i++) {\n        var iframe = iframes[i];\n        if (iframe.contentWindow === contentWindow) {\n            foundIframe = iframe;\n        }\n    }\n    return foundIframe;\n}\n\nfunction sortObject(obj) {\n    return Object.keys(obj).sort().reduce(function (acc, key) {\n        if (Array.isArray(obj[key])) {\n            acc[key] = obj[key].map(sortObjectKeys);\n        }\n        if (_typeof(obj[key]) === 'object') {\n            acc[key] = sortObjectKeys(obj[key]);\n        } else {\n            acc[key] = obj[key];\n        }\n        return acc;\n    }, {});\n}\n\nfunction updateIframe(id, query) {\n    // block options interaction\n    var clientId = id.split(\"div#block-\")[1],\n        blockAttrs = wp.data.select('core/block-editor').getBlockAttributes(clientId),\n        url = blockAttrs.url,\n        iframely_key = '&iframely=';\n\n    // Parse url and make sure we are replacing an url query string properly\n    if (url.indexOf('iframely=') > 0) {\n        var durl = url.split('iframely=')[0];\n        url = durl.substr(0, durl.length - 1);\n    }\n    if (url.indexOf('?') === -1) {\n        iframely_key = '?iframely=';\n    }\n\n    // Ensure sorted options object to make sure\n    // we generating same data each time for same options.\n    query = sortObject(query);\n    //query.timestamp = new Date();\n\n    // Join the url string with iframely params\n    var params = iframely_key + encodeURIComponent(window.btoa(JSON.stringify(query)));\n    var newUrl = url + params;\n\n    // Update the corresponding block and get a preview if required\n    wp.data.dispatch('core/block-editor').updateBlockAttributes([clientId], { url: newUrl });\n    var prUrl = void 0,\n        preview = wp.data.select('core').getEmbedPreview(newUrl);\n\n    if (preview) {\n        // This returns cached preview if we have any\n\n        // TODO: this is wrong. we should find a standard hook to update an embed with cached preview.\n        var wpIframe = $('div[data-block=' + clientId + ']').find('iframe').contents().get(0);\n        //let iframelyDiv = $(wpIframe).find('div.iframely-embed').get(0);\n        //$(iframelyDiv).html(preview.html+\"\");\n        var preview_url = 'https:' + $(preview.html).find('a').attr('data-iframely-url');\n        $('div[data-block=' + clientId + ']').find('iframe').get(0).src = preview_url;\n        // $('div[data-block='+clientId+']').find('iframe').each(function() {\n        //     let dz = $('div', this.contentWindow.document||this.contentDocument).get(0);\n        //     $(dz).html(preview.html);\n        // });\n    }\n}\n\nif (iframely) {\n    // Failsafe in case of iframely name space not accessible.\n    // E.g. no internet connection\n    iframely.on('options-changed', function (id, formContainer, query) {\n        updateIframe(id, query);\n    });\n}\n\nfunction initListener() {\n    window.addEventListener(\"message\", function (e) {\n        if (iEvent.test(e.data)) {\n            var frames = document.getElementsByTagName(\"iframe\"),\n                iframe = findIframeByContentWindow(frames, e.source);\n            $(iframe).data(JSON.parse(e.data));\n        }\n    }, false);\n}\ninitListener();\n\nvar IframelyOptions = function (_React$Component) {\n    _inherits(IframelyOptions, _React$Component);\n\n    function IframelyOptions() {\n        _classCallCheck(this, IframelyOptions);\n\n        return _possibleConstructorReturn(this, (IframelyOptions.__proto__ || Object.getPrototypeOf(IframelyOptions)).apply(this, arguments));\n    }\n\n    _createClass(IframelyOptions, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n            iframely.buildOptionsForm(this.props.selector, $('div#ifopts').get(0), this.props.options.data);\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            // console.log('data: ', this.props.options.data);\n            return wp.element.createElement(\n                \"div\",\n                { id: \"ifopts\",\n                    \"data-id\": this.props.clientId,\n                    \"data-opts\": JSON.stringify(this.props.options.data)\n                },\n                this.body\n            );\n        }\n    }]);\n\n    return IframelyOptions;\n}(React.Component);\n\nIframelyOptions.defaultProps = {\n    body: '',\n    clientId: '',\n    selector: '',\n    options: ''\n};\nvar withInspectorControls = createHigherOrderComponent(function (BlockEdit) {\n    return function (props) {\n        var fragment = wp.element.createElement(\n            Fragment,\n            null,\n            wp.element.createElement(BlockEdit, props)\n        );\n        if (props.isSelected === true && (props.name === \"core/embed\" || props.name.startsWith(\"core-embed\"))) {\n            var selector = 'div#block-' + props.clientId;\n            var options = $(selector).find('iframe').data();\n            if (!options || !options.data) {\n                return fragment;\n            }\n            return wp.element.createElement(\n                Fragment,\n                null,\n                wp.element.createElement(BlockEdit, props),\n                wp.element.createElement(\n                    InspectorControls,\n                    null,\n                    wp.element.createElement(\n                        PanelBody,\n                        { title: \"Iframely options\" },\n                        wp.element.createElement(IframelyOptions, { selector: selector, options: options, clientId: props.clientId })\n                    )\n                )\n            );\n        } else {\n            return fragment;\n        }\n    };\n}, \"withInspectorControl\");\n\nwp.hooks.addFilter('editor.BlockEdit', 'iframely/with-inspector-controls', withInspectorControls);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

                /***/ })
        /******/ ]);